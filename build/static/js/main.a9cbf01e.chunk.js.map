{"version":3,"sources":["comp/AdminPanel/QueueButton.js","comp/Button.js","comp/AdminPanel/QueueItem.js","comp/AdminPanel/Queue.js","comp/AdminPanel/AdminPanel.js","comp/PlayerAndChat.js","comp/Snackbars/Success.js","comp/Snackbars/Error.js","comp/MainPage/Home.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","borderColor","color","transition","boxShadow","OutlinedButtons","text","onClick","style","classes","className","Button","variant","backgroundColor","QueueItem","item","index","useState","videoTitle","setVideoTitle","useEffect","fetch","then","res","json","title","href","target","rel","Queue","queueList","useContext","DataContext","videoQueue","map","key","AdminPanel","twitchUserData","websiteURL","admin","setAdmin","setCurrentVideoLink","socket","setVideoQueue","setMaxDelay","maxDelay","chatRef","editVideoLink","setEditVideoLink","twitchStreamer","useParams","undefined","toLowerCase","delayInfoRef","useRef","handleDelayInfoSetWidth","current","width","offsetWidth","window","addEventListener","removeEventListener","login","emit","currentRoom","removeAllListeners","handleAddVideo","handleChangeMaxDelay","type","prev","value","placeholder","onChange","e","display","preventDefault","slice","location","src","image","alt","srcset","ref","PlayerAndChat","useLocation","onlineUsers","setOnlineUsers","setCurrentRoom","currentVideoLink","setIsSuccess","setIsError","setErrorMessage","setSuccessMessage","setIsAdminTaken","isPlaying","setIsPlaying","player","interval","setInterval","currentSeconds","getCurrentTime","clearInterval","ev","pathname","on","docs","isAdminTaken","videoDuration","getDuration","currentTime","seekTo","success","message","onPlay","onPause","playing","onEnded","url","height","controls","volume","border","id","Alert","props","elevation","marginTop","CustomizedSnackbars","isSuccess","successMessage","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","isError","errorMessage","Home","history","useHistory","setTwitchStreamer","push","React","createContext","io","App","setTwitchUserData","document","credentials","profile","Provider","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a9cbf01e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s\",\r\n      \"&:hover\": {\r\n        boxShadow: \"0 0 10px white\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        onClick={onClick && onClick}\r\n        style={style && style}\r\n        variant=\"outlined\"\r\n      >\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      // margin: theme.spacing(1),\r\n      backgroundColor: \"#6441a5\",\r\n      // borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s ease-in-out\",\r\n      \"&:hover\": {\r\n        color: \"white\",\r\n        borderColor: \"#6441a5\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        onClick={onClick && onClick}\r\n        style={style && style}\r\n        variant=\"outlined\"\r\n      >\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nconst QueueItem = ({ item, index }) => {\r\n  const [videoTitle, setVideoTitle] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://noembed.com/embed?url=${item}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setVideoTitle(res.title);\r\n      });\r\n  }, [item]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"queueItem\">\r\n        <a href={item} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {index + 1}.{videoTitle ? videoTitle : item}\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QueueItem;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../../App\";\r\nimport QueueItem from \"./QueueItem\";\r\nconst Queue = () => {\r\n  const { videoQueue } = useContext(DataContext);\r\n  const queueList = videoQueue.map((item, index) => {\r\n    return <QueueItem item={item} index={index} key={index} />;\r\n  });\r\n\r\n  return <div className=\"queue\">{queueList}</div>;\r\n};\r\n\r\nexport default Queue;\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport QueueButton from \"./QueueButton\";\r\nimport Button2 from \"../Button\";\r\nimport { DataContext } from \"../../App\";\r\nimport \"./AdminPanel.css\";\r\nimport Queue from \"./Queue\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport { useRef } from \"react\";\r\n\r\nconst AdminPanel = () => {\r\n  // const websiteURL = `https://boiling-bastion-80662.herokuapp.com`;\r\n  // const websiteURL = `http://localhost:3001`;\r\n\r\n  const {\r\n    twitchUserData,\r\n    websiteURL,\r\n    admin,\r\n    setAdmin,\r\n    setCurrentVideoLink,\r\n    socket,\r\n    setVideoQueue,\r\n    videoQueue,\r\n    setMaxDelay,\r\n    maxDelay,\r\n    chatRef,\r\n    // isAdminTaken,\r\n  } = useContext(DataContext);\r\n  const [editVideoLink, setEditVideoLink] = useState();\r\n\r\n  let { twitchStreamer } = useParams();\r\n\r\n  if (twitchStreamer === undefined) {\r\n    twitchStreamer = \"victorowsky_\";\r\n  }\r\n  twitchStreamer = twitchStreamer?.toLowerCase();\r\n  // DEFAULT VALUE IS MY CHANNEL\r\n\r\n  ///  HANDLE SET WIDTH ON DELAY INFO SAME AS CHAT\r\n  const delayInfoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleDelayInfoSetWidth = () => {\r\n      delayInfoRef.current.style.width = chatRef?.current?.offsetWidth + \"px\";\r\n    };\r\n    delayInfoRef.current.style.width = chatRef?.current?.offsetWidth + \"px\";\r\n    window.addEventListener(\"resize\", handleDelayInfoSetWidth);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleDelayInfoSetWidth);\r\n    };\r\n  }, [chatRef]);\r\n\r\n  useEffect(() => {\r\n    if (twitchUserData) {\r\n      if (twitchUserData.login.toLowerCase() === twitchStreamer.toLowerCase()) {\r\n        if (!admin) {\r\n          setAdmin(true);\r\n        }\r\n      }\r\n      return () => {\r\n        if (admin) {\r\n          setAdmin(false);\r\n        }\r\n      };\r\n    }\r\n  }, [twitchUserData, setAdmin, twitchStreamer, admin]);\r\n\r\n  useEffect(() => {\r\n    if (admin) {\r\n      socket.emit(\"adminQueueUpdate\", {\r\n        videoQueue,\r\n        currentRoom: twitchStreamer,\r\n      });\r\n\r\n      return () => {\r\n        socket.removeAllListeners(\"adminQueueUpdate\");\r\n      };\r\n    }\r\n  }, [videoQueue, socket, twitchStreamer, admin]);\r\n\r\n  const handleAddVideoToQueue = () => {\r\n    if (editVideoLink) {\r\n      setVideoQueue((prev) => [...prev, editVideoLink]);\r\n      setEditVideoLink(\"\");\r\n    }\r\n  };\r\n\r\n  const handleAddVideo = () => {\r\n    if (editVideoLink) {\r\n      setCurrentVideoLink(editVideoLink);\r\n      setEditVideoLink(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeMaxDelay = (type) => {\r\n    if (type === \"increment\") {\r\n      setMaxDelay((prev) => prev + 1);\r\n    } else if (type === \"decrement\") {\r\n      setMaxDelay((prev) => {\r\n        if (prev > 2) {\r\n          return prev + -1;\r\n        } else {\r\n          return prev;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAdminCheckQueue = () => {\r\n    if (admin) {\r\n      if (videoQueue) {\r\n        setCurrentVideoLink(videoQueue[0]);\r\n        setVideoQueue((prev) => prev.slice(1));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTwitchLogin = () => {\r\n    window.location.href = `${websiteURL}/auth/twitch`;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.location.href = `${websiteURL}/twitch/logout`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {admin ? (\r\n        <>\r\n          {/* ADDING VIDEO PANEL */}\r\n          <div className=\"adminPanel\">\r\n            <form>\r\n              <input\r\n                type=\"text\"\r\n                value={editVideoLink}\r\n                placeholder={\"VIDEO URL\"}\r\n                onChange={(e) => {\r\n                  if (admin) {\r\n                    setEditVideoLink(e.target.value);\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <button\r\n                style={{ display: \"none\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleAddVideo();\r\n                }}\r\n                type=\"submit\"\r\n              ></button>\r\n              <div className=\"optionButtons\">\r\n                <QueueButton text={\"PLAY NOW\"} onClick={handleAddVideo} />\r\n                <QueueButton\r\n                  text={\"ADD TO QUEUE\"}\r\n                  onClick={handleAddVideoToQueue}\r\n                />\r\n                <QueueButton text={\"SKIP\"} onClick={handleAdminCheckQueue} />\r\n                <Button2 text={\"LOGOUT\"} onClick={handleLogout} />\r\n              </div>\r\n            </form>\r\n            {twitchUserData && (\r\n              <div className=\"accountInfo\">\r\n                <div className=\"img\">\r\n                  <img src={twitchUserData.image} alt=\"twitchImage\" srcset=\"\" />\r\n                </div>\r\n                {twitchUserData.login}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <Queue />\r\n        </>\r\n      ) : (\r\n        <div className=\"delayInfoContainer\">\r\n          <Queue />\r\n          <div className=\"delay\" ref={delayInfoRef}>\r\n            <span className=\"delayInfo\">Max Delay: {maxDelay} seconds</span>\r\n            <div className=\"delayManage\">\r\n              <div\r\n                className=\"delayManageOptionDecrement\"\r\n                onClick={() => handleChangeMaxDelay(\"decrement\")}\r\n              >\r\n                <RemoveIcon />\r\n              </div>\r\n              <div\r\n                className=\"delayManageOptionIncrement\"\r\n                onClick={() => handleChangeMaxDelay(\"increment\")}\r\n              >\r\n                <AddIcon />\r\n              </div>\r\n            </div>\r\n\r\n            {twitchUserData ? (\r\n              <div className=\"accountInfo\">\r\n                <a\r\n                  href={`${websiteURL}/#/${twitchUserData.login.toLowerCase()}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <div className=\"img\">\r\n                    <img src={twitchUserData.image} alt=\"Profile\" />\r\n                  </div>\r\n                  {twitchUserData.login}\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"twitchLoginButton\">\r\n                  <Button2\r\n                    text={\"LOGIN WITH TWITCH\"}\r\n                    onClick={handleTwitchLogin}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useContext } from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./PlayerAndChat.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nconst PlayerAndChat = () => {\r\n  let location = useLocation();\r\n  let { twitchStreamer } = useParams();\r\n  // DEFAULT VALUE IS MY CHANNEL\r\n  if (twitchStreamer === undefined) {\r\n    twitchStreamer = \"victorowsky_\";\r\n  }\r\n\r\n  twitchStreamer = twitchStreamer.toLowerCase();\r\n\r\n  const [onlineUsers, setOnlineUsers] = useState(null);\r\n  const [currentRoom, setCurrentRoom] = useState(twitchStreamer);\r\n  const {\r\n    admin,\r\n    setCurrentVideoLink,\r\n    currentVideoLink,\r\n    socket,\r\n    setAdmin,\r\n    setIsSuccess,\r\n    setIsError,\r\n    setErrorMessage,\r\n    setSuccessMessage,\r\n    videoQueue,\r\n    setVideoQueue,\r\n    maxDelay,\r\n    setIsAdminTaken,\r\n    chatRef,\r\n  } = useContext(DataContext);\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const player = useRef();\r\n  const maxDelayLive = 6;\r\n  // CHAT LINK\r\n  // const websiteURL = \"victorowsky.github.io\"; // FOR TWITCH CHAT GITHUB\r\n  const websiteURL = \"boiling-bastion-80662.herokuapp.com\"; // HEROKU HOSTING\r\n  // const websiteURL = \"localhost\"; // FOR TWITCH C  HAT\r\n\r\n  // ADMIN EMITS HIS DATA TO SHARE WITH OTHERS\r\n  useEffect(() => {\r\n    let interval;\r\n    if (admin) {\r\n      interval = setInterval(() => {\r\n        socket.emit(`adminData`, {\r\n          currentRoom,\r\n          currentSeconds: player.current.getCurrentTime(),\r\n          videoQueue,\r\n        });\r\n      }, 3000);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [admin, socket, currentRoom, videoQueue]);\r\n\r\n  // EMIT CHANGE VIDEO IF ADMIN CHANGES\r\n  useEffect(() => {\r\n    if (admin) {\r\n      socket.emit(`videoChange`, {\r\n        currentVideoLink,\r\n        currentRoom,\r\n      });\r\n    }\r\n    // HERE CANT BE CURRENTROOM, CUZ IT WILL SEND ANOTHER ADMIN DATA\r\n    // eslint-disable-next-line\r\n  }, [currentVideoLink, socket]);\r\n\r\n  // DELETING ADMIN IF SWITCHING BETWEEN CHANNELS\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n      ev.preventDefault();\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      socket.emit(\"adminLeave\");\r\n    });\r\n    setCurrentRoom(twitchStreamer);\r\n    // eslint-disable-next-line\r\n  }, [location.pathname]);\r\n\r\n  // JOINING TO ROOM\r\n  useEffect(() => {\r\n    socket.emit(`joinRoom`, { currentRoom });\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      setAdmin(false);\r\n      socket.emit(\"adminLeave\");\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [currentRoom]);\r\n\r\n  // SOCKETS LISTENERS FOR USERS ONLY\r\n  useEffect(() => {\r\n    socket.on(\"onlineUsersAnswer\", ({ onlineUsers }) => {\r\n      setOnlineUsers(onlineUsers);\r\n    });\r\n\r\n    socket.on(\"joinRoomAnswer\", ({ docs }) => {\r\n      setCurrentVideoLink(docs.currentVideoLink);\r\n    });\r\n\r\n    if (!admin) {\r\n      socket.on(\"videoChangeAnswer\", ({ currentVideoLink }) => {\r\n        // TURNED OFF FOR ADMIN TO NOT LOOP PAGE\r\n        setCurrentVideoLink(currentVideoLink);\r\n      });\r\n      socket.on(\"isPlayingSocketAnswer\", ({ isPlaying, currentRoom }) => {\r\n        setIsPlaying(isPlaying);\r\n      });\r\n\r\n      socket.on(\"joinRoomAnswer\", ({ docs }) => {\r\n        setCurrentVideoLink(docs.currentVideoLink);\r\n        setOnlineUsers(docs.onlineUsers);\r\n        if (docs.admin) {\r\n          setIsAdminTaken(true);\r\n        } else {\r\n          setIsAdminTaken(false);\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminAnswer\", ({ isAdminTaken }) => {\r\n        setIsAdminTaken(isAdminTaken);\r\n      });\r\n\r\n      // SYNC SECONDS WITH ADMIN\r\n      socket.on(`adminDataAnswer`, ({ currentSeconds, videoQueue }) => {\r\n        setVideoQueue(videoQueue);\r\n        if (player.current) {\r\n          const videoDuration = player.current.getDuration();\r\n          const currentTime = player.current.getCurrentTime();\r\n          // FOR LIVESTREAMS\r\n          if (videoDuration > currentSeconds) {\r\n            // STANDARD VIDEO\r\n            if (\r\n              !(\r\n                currentTime - maxDelay < currentSeconds &&\r\n                currentTime + maxDelay > currentSeconds\r\n              )\r\n            ) {\r\n              // MAX 2 SENONDS DIFFERENCE\r\n              player.current.seekTo(currentSeconds, \"seconds\");\r\n            }\r\n          } else {\r\n            // HERE IS LIVESTREAM VERSION\r\n            if (\r\n              !(\r\n                currentTime < videoDuration + maxDelayLive &&\r\n                currentTime > videoDuration - maxDelayLive\r\n              )\r\n            ) {\r\n              player.current.seekTo(videoDuration, \"seconds\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminRequestAnswer\", ({ success, message }) => {\r\n        if (success) {\r\n          setIsSuccess(true);\r\n          setSuccessMessage(message);\r\n          setAdmin(true);\r\n        } else {\r\n          setIsError(true);\r\n          setErrorMessage(message);\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminQueueUpdateAnswer\", ({ videoQueue }) => {\r\n        setVideoQueue(videoQueue);\r\n      });\r\n\r\n      return () => {\r\n        socket.removeAllListeners(`adminDataAnswer`);\r\n        socket.removeAllListeners(`joinRoomAnswer`);\r\n        socket.removeAllListeners(`isPlayingSocketAnswer`);\r\n        socket.removeAllListeners(`videoChangeAnswer`);\r\n        socket.removeAllListeners(\"adminAnswer\");\r\n        socket.removeAllListeners(\"adminRequestAnswer\");\r\n        socket.removeAllListeners(\"adminQueueUpdateAnswer\");\r\n      };\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentRoom, admin, socket, maxDelay]);\r\n\r\n  const startSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(true);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: true,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const stopSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(false);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: false,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAdminCheckQueue = () => {\r\n    if (admin) {\r\n      if (videoQueue) {\r\n        setCurrentVideoLink(videoQueue[0]);\r\n        setVideoQueue((prev) => prev.slice(1));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"videoAndChat\">\r\n      <div className=\"playerAndChat\">\r\n        <div className=\"player-wrapper\">\r\n          <ReactPlayer\r\n            ref={player}\r\n            onPlay={startSendingTimeToSocket}\r\n            onPause={stopSendingTimeToSocket}\r\n            playing={isPlaying}\r\n            onEnded={handleAdminCheckQueue}\r\n            className=\"react-player\"\r\n            url={currentVideoLink}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            controls={true}\r\n            volume={0.1}\r\n          />\r\n        </div>\r\n        <div className=\"twitchChat\" ref={chatRef}>\r\n          <span className=\"onlineUsers\">\r\n            {onlineUsers !== null ? `${onlineUsers} ONLINE` : \"CONNECTING\"}\r\n          </span>\r\n          <iframe\r\n            style={{ border: \"2px solid #121212\" }}\r\n            title=\"TwitchChat\"\r\n            id=\"chat_embed\"\r\n            src={`https://www.twitch.tv/embed/${twitchStreamer}/chat?darkpopout&parent=${websiteURL}`}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerAndChat;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isSuccess, setIsSuccess, successMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isSuccess} autoHideDuration={1000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {successMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isError, setIsError, errorMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsError(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isError} autoHideDuration={1000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Home = () => {\r\n  const { twitchUserData } = useContext(DataContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [twitchStreamer, setTwitchStreamer] = useState();\r\n  const goToChannel = (e) => {\r\n    e.preventDefault();\r\n    if (twitchStreamer) {\r\n      history.push(`/${twitchStreamer}`);\r\n    }\r\n  };\r\n\r\n  const websiteURL = `https://boiling-bastion-80662.herokuapp.com`;\r\n\r\n  const handleTwitchLogin = () => {\r\n    window.location.href = `${websiteURL}/auth/twitch`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1> Twitch Together</h1>\r\n      <h2>Enter twitch streamer username</h2>\r\n      <form>\r\n        <input\r\n          placeholder=\"Channel\"\r\n          type=\"text\"\r\n          value={twitchStreamer}\r\n          onChange={(e) => setTwitchStreamer(e.target.value)}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{ display: \"none\" }}\r\n          onClick={goToChannel}\r\n        ></button>\r\n        {twitchUserData ? (\r\n          <div className=\"userInfo\">\r\n            <a href={`${websiteURL}/#/${twitchUserData.login}`}>\r\n              <img src={twitchUserData.image} alt=\"Twitch\" />\r\n              {twitchUserData.login}\r\n            </a>\r\n          </div>\r\n        ) : (\r\n          <div onClick={handleTwitchLogin} className=\"twitchButton\">\r\n            Login with Twitch\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport AdminPanel from \"./comp/AdminPanel/AdminPanel\";\nimport PlayerAndChat from \"./comp/PlayerAndChat\";\nimport Success from \"./comp/Snackbars/Success\";\nimport Error from \"./comp/Snackbars/Error\";\nimport Home from \"./comp/MainPage/Home.js\";\nimport { useRef } from \"react\";\nexport const DataContext = React.createContext();\n\nconst socket = io(`/`);\n// const serverURL = \"https://boiling-bastion-80662.herokuapp.com/\";\n// const socket = io(serverURL);\nconst App = () => {\n  const history = useHistory();\n  const [admin, setAdmin] = useState(false);\n  const [currentVideoLink, setCurrentVideoLink] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [videoQueue, setVideoQueue] = useState([]);\n  const [maxDelay, setMaxDelay] = useState(2);\n  const [isAdminTaken, setIsAdminTaken] = useState(true);\n  const [twitchUserData, setTwitchUserData] = useState(null);\n\n  const websiteURL = \"https://boiling-bastion-80662.herokuapp.com\"; // HEROKU HOSTING\n  // const websiteURL = \"http://localhost:3001\"; //\n\n  // APP, ADMINPANEL, PLAYERANDCHAT, PACKAGE.JSON\n\n  useEffect(() => {\n    fetch(`https://noembed.com/embed?url=${currentVideoLink}`)\n      .then((res) => res.json())\n      .then((res) => {\n        document.title = res.title;\n        if (res.title === undefined) {\n          document.title = \"Watch Together\";\n        }\n      });\n  }, [currentVideoLink]);\n\n  useEffect(() => {\n    fetch(\"/getProfile\", { credentials: \"include\" })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.profile) {\n          setTwitchUserData(res.profile);\n        }\n      });\n  }, []);\n\n  const chatRef = useRef(null);\n\n  return (\n    <>\n      <DataContext.Provider\n        value={{\n          chatRef,\n          websiteURL,\n          twitchUserData,\n          admin,\n          setAdmin,\n          socket,\n          currentVideoLink,\n          setCurrentVideoLink,\n          history,\n          isSuccess,\n          setIsSuccess,\n          isError,\n          setIsError,\n          successMessage,\n          setSuccessMessage,\n          errorMessage,\n          setErrorMessage,\n          videoQueue,\n          setVideoQueue,\n          maxDelay,\n          setMaxDelay,\n          isAdminTaken,\n          setIsAdminTaken,\n        }}\n      >\n        <div className=\"app\">\n          <Switch>\n            {/* DEFAULT TWITCH CHAT FOR MY CHANNEL (VICTOROWSKY_) */}\n            <Route path=\"/\" exact>\n              {/* <PlayerAndChat />\n              <div className=\"bottomDiv\">\n                <AdminPanel />\n              </div> */}\n              <Home />\n            </Route>\n            <Route path=\"/:twitchStreamer\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">\n                <AdminPanel />\n              </div>\n            </Route>\n          </Switch>\n          <Success />\n          <Error />\n        </div>\n      </DataContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}