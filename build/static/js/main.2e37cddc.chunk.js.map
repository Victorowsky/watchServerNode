{"version":3,"sources":["comp/AdminPanel/QueueButton.js","comp/Button.js","comp/AdminPanel/QueueItem.js","comp/AdminPanel/Queue.js","comp/AdminPanel/AdminPanel.js","comp/PlayerAndChat.js","comp/Snackbars/Success.js","comp/Snackbars/Error.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","borderColor","color","transition","boxShadow","OutlinedButtons","text","onClick","style","classes","className","Button","variant","backgroundColor","QueueItem","item","index","useState","videoTitle","setVideoTitle","useEffect","fetch","then","res","json","title","href","target","rel","Queue","queueList","useContext","DataContext","videoQueue","map","key","AdminPanel","twitchUserData","websiteURL","admin","setAdmin","setCurrentVideoLink","socket","setVideoQueue","setMaxDelay","maxDelay","editVideoLink","setEditVideoLink","twitchStreamer","useParams","undefined","toLowerCase","login","emit","currentRoom","removeAllListeners","handleAddVideo","handleChangeMaxDelay","type","prev","value","placeholder","onChange","e","display","preventDefault","slice","window","location","src","image","alt","srcset","PlayerAndChat","useLocation","onlineUsers","setOnlineUsers","setCurrentRoom","currentVideoLink","setIsSuccess","setIsError","setErrorMessage","setSuccessMessage","setIsAdminTaken","isPlaying","setIsPlaying","player","useRef","interval","setInterval","currentSeconds","current","getCurrentTime","clearInterval","addEventListener","ev","pathname","on","docs","isAdminTaken","videoDuration","getDuration","currentTime","seekTo","success","message","ref","onPlay","onPause","playing","onEnded","url","width","height","controls","volume","border","id","Alert","props","elevation","marginTop","CustomizedSnackbars","isSuccess","successMessage","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","isError","errorMessage","React","createContext","io","App","history","useHistory","setTwitchUserData","document","credentials","profile","Provider","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e37cddc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s\",\r\n      \"&:hover\": {\r\n        boxShadow: \"0 0 10px white\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        onClick={onClick && onClick}\r\n        style={style && style}\r\n        variant=\"outlined\"\r\n      >\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      // margin: theme.spacing(1),\r\n      backgroundColor: \"#6441a5\",\r\n      // borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s ease-in-out\",\r\n      \"&:hover\": {\r\n        color: \"white\",\r\n        borderColor: \"#6441a5\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        onClick={onClick && onClick}\r\n        style={style && style}\r\n        variant=\"outlined\"\r\n      >\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nconst QueueItem = ({ item, index }) => {\r\n  const [videoTitle, setVideoTitle] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://noembed.com/embed?url=${item}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setVideoTitle(res.title);\r\n      });\r\n  }, [item]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"queueItem\">\r\n        <a href={item} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {index + 1}.{videoTitle ? videoTitle : item}\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QueueItem;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../../App\";\r\nimport QueueItem from \"./QueueItem\";\r\nconst Queue = () => {\r\n  const { videoQueue } = useContext(DataContext);\r\n  const queueList = videoQueue.map((item, index) => {\r\n    return <QueueItem item={item} index={index} key={index} />;\r\n  });\r\n\r\n  return <div className=\"queue\">{queueList}</div>;\r\n};\r\n\r\nexport default Queue;\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport QueueButton from \"./QueueButton\";\r\nimport Button2 from \"../Button\";\r\nimport { DataContext } from \"../../App\";\r\nimport \"./AdminPanel.css\";\r\nimport Queue from \"./Queue\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\nconst AdminPanel = () => {\r\n  // const websiteURL = `https://boiling-bastion-80662.herokuapp.com`;\r\n  // const websiteURL = `http://localhost:3001`;\r\n\r\n  const {\r\n    twitchUserData,\r\n    websiteURL,\r\n    admin,\r\n    setAdmin,\r\n    setCurrentVideoLink,\r\n    socket,\r\n    setVideoQueue,\r\n    videoQueue,\r\n    setMaxDelay,\r\n    maxDelay,\r\n    // isAdminTaken,\r\n  } = useContext(DataContext);\r\n  const [editVideoLink, setEditVideoLink] = useState();\r\n\r\n  let { twitchStreamer } = useParams();\r\n\r\n  if (twitchStreamer === undefined) {\r\n    twitchStreamer = \"victorowsky_\";\r\n  }\r\n  twitchStreamer = twitchStreamer?.toLowerCase();\r\n  // DEFAULT VALUE IS MY CHANNEL\r\n\r\n  useEffect(() => {\r\n    if (twitchUserData) {\r\n      if (twitchUserData.login.toLowerCase() === twitchStreamer.toLowerCase()) {\r\n        if (!admin) {\r\n          setAdmin(true);\r\n        }\r\n        // socket.emit(\"adminFromTwitchJoined\", { currentRoom: twitchStreamer });\r\n      }\r\n      return () => {\r\n        if (admin) {\r\n          setAdmin(false);\r\n        }\r\n      };\r\n    }\r\n  }, [twitchUserData, setAdmin, twitchStreamer, admin]);\r\n\r\n  useEffect(() => {\r\n    if (admin) {\r\n      socket.emit(\"adminQueueUpdate\", {\r\n        videoQueue,\r\n        currentRoom: twitchStreamer,\r\n      });\r\n\r\n      return () => {\r\n        socket.removeAllListeners(\"adminQueueUpdate\");\r\n      };\r\n    }\r\n  }, [videoQueue, socket, twitchStreamer, admin]);\r\n\r\n  const handleAddVideoToQueue = () => {\r\n    if (editVideoLink) {\r\n      setVideoQueue((prev) => [...prev, editVideoLink]);\r\n      setEditVideoLink(\"\");\r\n    }\r\n  };\r\n\r\n  const handleAddVideo = () => {\r\n    if (editVideoLink) {\r\n      setCurrentVideoLink(editVideoLink);\r\n      setEditVideoLink(\"\");\r\n    }\r\n  };\r\n\r\n  // const handleAdminRequest = () => {\r\n  //   socket.emit(\"adminRequest\", { currentRoom: twitchStreamer });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   if (admin) {\r\n  //     handleAdminRequest();\r\n  //   }\r\n  // }, [admin]);\r\n\r\n  const handleChangeMaxDelay = (type) => {\r\n    if (type === \"increment\") {\r\n      setMaxDelay((prev) => prev + 1);\r\n    } else if (type === \"decrement\") {\r\n      setMaxDelay((prev) => {\r\n        if (prev > 2) {\r\n          return prev + -1;\r\n        } else {\r\n          return prev;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // const handleLeaveAdmin = () => {\r\n  //   const confirmAnswer = window.confirm(\r\n  //     \"Are you sure you don't want to be an admin?\"\r\n  //   );\r\n  //   if (confirmAnswer) {\r\n  //     setAdmin(false);\r\n  //     socket.emit(\"adminLeave\");\r\n  //   }\r\n  // };\r\n\r\n  const handleAdminCheckQueue = () => {\r\n    if (admin) {\r\n      if (videoQueue) {\r\n        setCurrentVideoLink(videoQueue[0]);\r\n        setVideoQueue((prev) => prev.slice(1));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTwitchLogin = () => {\r\n    window.location.href = `${websiteURL}/auth/twitch`;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.location.href = `${websiteURL}/twitch/logout`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {admin ? (\r\n        <>\r\n          {/* ADDING VIDEO PANEL */}\r\n          <div className=\"adminPanel\">\r\n            <form>\r\n              <input\r\n                type=\"text\"\r\n                value={editVideoLink}\r\n                placeholder={\"VIDEO URL\"}\r\n                onChange={(e) => {\r\n                  if (admin) {\r\n                    setEditVideoLink(e.target.value);\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <button\r\n                style={{ display: \"none\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleAddVideo();\r\n                }}\r\n                type=\"submit\"\r\n              ></button>\r\n              <div className=\"optionButtons\">\r\n                <QueueButton text={\"PLAY NOW\"} onClick={handleAddVideo} />\r\n                <QueueButton\r\n                  text={\"ADD TO QUEUE\"}\r\n                  onClick={handleAddVideoToQueue}\r\n                />\r\n                <QueueButton text={\"SKIP\"} onClick={handleAdminCheckQueue} />\r\n                <Button2 text={\"LOGOUT\"} onClick={handleLogout} />\r\n              </div>\r\n            </form>\r\n            {twitchUserData && (\r\n              <div className=\"accountInfo\">\r\n                <div className=\"img\">\r\n                  <img src={twitchUserData.image} alt=\"twitchImage\" srcset=\"\" />\r\n                </div>\r\n                {twitchUserData.login}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <Queue />\r\n        </>\r\n      ) : (\r\n        <div className=\"delayInfoContainer\">\r\n          <Queue />\r\n          <div className=\"delay\">\r\n            <span className=\"delayInfo\">Max Delay: {maxDelay} seconds</span>\r\n            <div className=\"delayManage\">\r\n              <div\r\n                className=\"delayManageOptionDecrement\"\r\n                onClick={() => handleChangeMaxDelay(\"decrement\")}\r\n              >\r\n                <RemoveIcon />\r\n              </div>\r\n              <div\r\n                className=\"delayManageOptionIncrement\"\r\n                onClick={() => handleChangeMaxDelay(\"increment\")}\r\n              >\r\n                <AddIcon />\r\n              </div>\r\n            </div>\r\n\r\n            {twitchUserData ? (\r\n              <div className=\"accountInfo\">\r\n                <a\r\n                  href={`${websiteURL}/#/${twitchUserData.login.toLowerCase()}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <div className=\"img\">\r\n                    <img src={twitchUserData.image} alt=\"Profile\" />\r\n                  </div>\r\n                  {twitchUserData.login}\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"twitchLoginButton\">\r\n                  <Button2\r\n                    text={\"LOGIN WITH TWITCH\"}\r\n                    onClick={handleTwitchLogin}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useContext } from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./PlayerAndChat.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nconst PlayerAndChat = () => {\r\n  let location = useLocation();\r\n  let { twitchStreamer } = useParams();\r\n  // DEFAULT VALUE IS MY CHANNEL\r\n  if (twitchStreamer === undefined) {\r\n    twitchStreamer = \"victorowsky_\";\r\n  }\r\n\r\n  twitchStreamer = twitchStreamer.toLowerCase();\r\n\r\n  const [onlineUsers, setOnlineUsers] = useState(null);\r\n  const [currentRoom, setCurrentRoom] = useState(twitchStreamer);\r\n  const {\r\n    admin,\r\n    setCurrentVideoLink,\r\n    currentVideoLink,\r\n    socket,\r\n    setAdmin,\r\n    setIsSuccess,\r\n    setIsError,\r\n    setErrorMessage,\r\n    setSuccessMessage,\r\n    videoQueue,\r\n    setVideoQueue,\r\n    maxDelay,\r\n    setIsAdminTaken,\r\n  } = useContext(DataContext);\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const player = useRef();\r\n  const maxDelayLive = 6;\r\n  // const websiteURL = \"victorowsky.github.io\"; // FOR TWITCH CHAT GITHUB\r\n  const websiteURL = \"boiling-bastion-80662.herokuapp.com\"; // HEROKU HOSTING\r\n  // const websiteURL = \"localhost\"; // FOR TWITCH C  HAT\r\n\r\n  // ADMIN EMITS HIS DATA TO SHARE WITH OTHERS\r\n  useEffect(() => {\r\n    let interval;\r\n    if (admin) {\r\n      interval = setInterval(() => {\r\n        socket.emit(`adminData`, {\r\n          currentRoom,\r\n          currentSeconds: player.current.getCurrentTime(),\r\n          videoQueue,\r\n        });\r\n      }, 3000);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [admin, socket, currentRoom, videoQueue]);\r\n\r\n  // EMIT CHANGE VIDEO IF ADMIN CHANGES\r\n  useEffect(() => {\r\n    if (admin) {\r\n      socket.emit(`videoChange`, {\r\n        currentVideoLink,\r\n        currentRoom,\r\n      });\r\n    }\r\n    // HERE CANT BE CURRENTROOM, CUZ IT WILL SEND ANOTHER ADMIN DATA\r\n    // eslint-disable-next-line\r\n  }, [currentVideoLink, socket]);\r\n\r\n  // DELETING ADMIN IF SWITCHING BETWEEN CHANNELS\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n      ev.preventDefault();\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      socket.emit(\"adminLeave\");\r\n    });\r\n    setCurrentRoom(twitchStreamer);\r\n    // eslint-disable-next-line\r\n  }, [location.pathname]);\r\n\r\n  // JOINING TO ROOM\r\n  useEffect(() => {\r\n    socket.emit(`joinRoom`, { currentRoom });\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      setAdmin(false);\r\n      socket.emit(\"adminLeave\");\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [currentRoom]);\r\n\r\n  // SOCKETS LISTENERS FOR USERS ONLY\r\n  useEffect(() => {\r\n    socket.on(\"onlineUsersAnswer\", ({ onlineUsers }) => {\r\n      setOnlineUsers(onlineUsers);\r\n    });\r\n\r\n    socket.on(\"joinRoomAnswer\", ({ docs }) => {\r\n      setCurrentVideoLink(docs.currentVideoLink);\r\n    });\r\n\r\n    if (!admin) {\r\n      socket.on(\"videoChangeAnswer\", ({ currentVideoLink }) => {\r\n        // TURNED OFF FOR ADMIN TO NOT LOOP PAGE\r\n        setCurrentVideoLink(currentVideoLink);\r\n      });\r\n      socket.on(\"isPlayingSocketAnswer\", ({ isPlaying, currentRoom }) => {\r\n        setIsPlaying(isPlaying);\r\n      });\r\n\r\n      socket.on(\"joinRoomAnswer\", ({ docs }) => {\r\n        setCurrentVideoLink(docs.currentVideoLink);\r\n        setOnlineUsers(docs.onlineUsers);\r\n        if (docs.admin) {\r\n          setIsAdminTaken(true);\r\n        } else {\r\n          setIsAdminTaken(false);\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminAnswer\", ({ isAdminTaken }) => {\r\n        setIsAdminTaken(isAdminTaken);\r\n      });\r\n\r\n      // SYNC SECONDS WITH ADMIN\r\n      socket.on(`adminDataAnswer`, ({ currentSeconds, videoQueue }) => {\r\n        setVideoQueue(videoQueue);\r\n        if (player.current) {\r\n          const videoDuration = player.current.getDuration();\r\n          const currentTime = player.current.getCurrentTime();\r\n          // FOR LIVESTREAMS\r\n          if (videoDuration > currentSeconds) {\r\n            // STANDARD VIDEO\r\n            if (\r\n              !(\r\n                currentTime - maxDelay < currentSeconds &&\r\n                currentTime + maxDelay > currentSeconds\r\n              )\r\n            ) {\r\n              // MAX 2 SENONDS DIFFERENCE\r\n              player.current.seekTo(currentSeconds, \"seconds\");\r\n            }\r\n          } else {\r\n            // HERE IS LIVESTREAM VERSION\r\n            if (\r\n              !(\r\n                currentTime < videoDuration + maxDelayLive &&\r\n                currentTime > videoDuration - maxDelayLive\r\n              )\r\n            ) {\r\n              player.current.seekTo(videoDuration, \"seconds\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminRequestAnswer\", ({ success, message }) => {\r\n        if (success) {\r\n          setIsSuccess(true);\r\n          setSuccessMessage(message);\r\n          setAdmin(true);\r\n        } else {\r\n          setIsError(true);\r\n          setErrorMessage(message);\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminQueueUpdateAnswer\", ({ videoQueue }) => {\r\n        setVideoQueue(videoQueue);\r\n      });\r\n\r\n      return () => {\r\n        socket.removeAllListeners(`adminDataAnswer`);\r\n        socket.removeAllListeners(`joinRoomAnswer`);\r\n        socket.removeAllListeners(`isPlayingSocketAnswer`);\r\n        socket.removeAllListeners(`videoChangeAnswer`);\r\n        socket.removeAllListeners(\"adminAnswer\");\r\n        socket.removeAllListeners(\"adminRequestAnswer\");\r\n        socket.removeAllListeners(\"adminQueueUpdateAnswer\");\r\n      };\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentRoom, admin, socket, maxDelay]);\r\n\r\n  const startSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(true);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: true,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const stopSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(false);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: false,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAdminCheckQueue = () => {\r\n    if (admin) {\r\n      if (videoQueue) {\r\n        setCurrentVideoLink(videoQueue[0]);\r\n        setVideoQueue((prev) => prev.slice(1));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"videoAndChat\">\r\n      <div className=\"playerAndChat\">\r\n        <div className=\"player-wrapper\">\r\n          <ReactPlayer\r\n            ref={player}\r\n            onPlay={startSendingTimeToSocket}\r\n            onPause={stopSendingTimeToSocket}\r\n            playing={isPlaying}\r\n            onEnded={handleAdminCheckQueue}\r\n            className=\"react-player\"\r\n            url={currentVideoLink}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            controls={true}\r\n            volume={0.1}\r\n          />\r\n        </div>\r\n        <div className=\"twitchChat\">\r\n          <span className=\"onlineUsers\">\r\n            {onlineUsers !== null ? `${onlineUsers} ONLINE` : \"CONNECTING\"}\r\n          </span>\r\n          <iframe\r\n            style={{ border: \"2px solid #121212\" }}\r\n            title=\"TwitchChat\"\r\n            id=\"chat_embed\"\r\n            src={`https://www.twitch.tv/embed/${twitchStreamer}/chat?darkpopout&parent=${websiteURL}`}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerAndChat;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isSuccess, setIsSuccess, successMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isSuccess} autoHideDuration={1000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {successMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isError, setIsError, errorMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsError(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isError} autoHideDuration={1000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport AdminPanel from \"./comp/AdminPanel/AdminPanel\";\nimport PlayerAndChat from \"./comp/PlayerAndChat\";\nimport Success from \"./comp/Snackbars/Success\";\nimport Error from \"./comp/Snackbars/Error\";\nexport const DataContext = React.createContext();\n\nconst socket = io(`/`);\n// const serverURL = \"https://boiling-bastion-80662.herokuapp.com/\";\n// const socket = io(serverURL);\nconst App = () => {\n  const history = useHistory();\n  const [admin, setAdmin] = useState(false);\n  const [currentVideoLink, setCurrentVideoLink] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [videoQueue, setVideoQueue] = useState([]);\n  const [maxDelay, setMaxDelay] = useState(2);\n  const [isAdminTaken, setIsAdminTaken] = useState(true);\n  const [twitchUserData, setTwitchUserData] = useState(null);\n  const websiteURL = \"https://boiling-bastion-80662.herokuapp.com\"; // HEROKU HOSTING\n  // const websiteURL = \"localhost\"; // FOR TWITCH C  HAT\n\n  useEffect(() => {\n    fetch(`https://noembed.com/embed?url=${currentVideoLink}`)\n      .then((res) => res.json())\n      .then((res) => {\n        document.title = res.title;\n        if (res.title === undefined) {\n          document.title = \"Watch Together\";\n        }\n      });\n  }, [currentVideoLink]);\n\n  useEffect(() => {\n    fetch(\"/getProfile\", { credentials: \"include\" })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.profile) {\n          setTwitchUserData(res.profile);\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <DataContext.Provider\n        value={{\n          websiteURL,\n          twitchUserData,\n          admin,\n          setAdmin,\n          socket,\n          currentVideoLink,\n          setCurrentVideoLink,\n          history,\n          isSuccess,\n          setIsSuccess,\n          isError,\n          setIsError,\n          successMessage,\n          setSuccessMessage,\n          errorMessage,\n          setErrorMessage,\n          videoQueue,\n          setVideoQueue,\n          maxDelay,\n          setMaxDelay,\n          isAdminTaken,\n          setIsAdminTaken,\n        }}\n      >\n        <div className=\"app\">\n          <Switch>\n            {/* DEFAULT TWITCH CHAT FOR MY CHANNEL (VICTOROWSKY_) */}\n            <Route path=\"/\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">\n                <AdminPanel />\n              </div>\n            </Route>\n            <Route path=\"/:twitchStreamer\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">\n                <AdminPanel />\n              </div>\n            </Route>\n          </Switch>\n          <Success />\n          <Error />\n        </div>\n      </DataContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}